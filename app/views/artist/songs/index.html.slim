.alert-custom
#artistMusicPage
  = render partial: 'artist/artist/artist_profile_header', locals: { artist: @artist }  
  .container
    - if @artist.artist_visible_songs.any?
      .selected-songs
        h4 My Songs

        table.table.table-mix8
          thead
            tr
              th
              th #{sortable 'name', 'Song Name'}
              th.text-center #{sortable 'duration', 'Duration'}
              th.text-center #{sortable 'plays_count', 'Plays'}
              th.text-center #{sortable 'downloads_count', 'Downloads'}
              th.text-center #{sortable 'remixes_count', 'Remixes'}
              th.text-center #{sortable 'status', 'Status'}
              th
          tbody
            - selected_songs = @artist.artist_visible_songs.decorate
            - selected_songs.each_with_index do |song, index|             
              .modal.fade aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="confirm-delete_#{song.id}"
                .modal-dialog
                  .modal-content
                    .modal-header
                      button.close aria-hidden="true" data-dismiss="modal" type="button"  &times;
                      h4#myModalLabel.modal-title Confirm Delete
                    .modal-body
                      p.debug_name
                      p.debug-url
                        | Are you sure you want to permanently delete
                        b  #{song.name}
                    .modal-footer
                      button.btn.btn-default data-dismiss="modal" type="button" No
                      a.btn.btn-danger.btn-ok href="#{artist_song_path(song)}"  data-remote="true" data-dismiss="modal" data-method="delete" data-id="#{song.id}" Yes
              tr[id="song_#{song.id}"]              
                td
                  = link_to configure_artist_song_path(song) do
                    = image_tag song.image.url(:thumb), class: 'img-cover'
                td
                  = link_to song.name, configure_artist_song_path(song)
                td.duration.text-center #{song.duration}
                td.plays.text-center #{song.plays_count}
                td.downloads.text-center #{song.downloads_count}
                td.remixes.text-center #{song.remixes_count}
                td.status.text-center data-attributes="#{song.id}" #{song.status_icon}
                td.btn-group
                  = image_tag 'edit.png', class: 'dropdown-toggle', :aria => { :expanded => false, :haspopup => true}, :data => {:toggle => 'dropdown'}
                  ul.dropdown-menu
                    li
                      a.status-event href="#{edit_artist_song_path(song)}" Edit
                    li
                      a data-id=song.name data-href="#{song.id}" data-toggle="modal" data-target="#confirm-delete_#{song.id}" href="#" Delete
    - if @artist.remixes.any?
      .top-remixes
        h4 Top Remixes

        table.table.table-mix8
          thead
            tr
              th
              th
              th
              th Remix Name
              th.text-center Remixed By
              th.text-center Plays
              th.text-center Downloads
          tbody
            - top_remixes = @artist.remixes.decorate
            - top_remixes.each_with_index do |remix, index|
              tr
                td.rank #{index + 1}
                td.img
                  = image_tag remix.song.image.url(:thumb), class: 'img-cover'
                td.media.track data-id="song_#{remix.id}" data-audio='{"m4a": "#{remix.audio}"}'
                  .media-left
                    a class="play"
                      = image_tag 'tracks/play.png'
                    a class="pause"
                      = image_tag 'tracks/pause.png'
                  .media-body
                    .mix8-player
                      .jp-player id="jquery_jplayer_#{remix.song.id}_#{remix.id}"
                      .jp-audio id="jp_container_#{remix.song.id}_#{remix.id}"
                td
                  = link_to remix.name, artist_song_path(remix.song)
                  / span.hot.badge Hot
                  / span.new.badge New
                td.remixed-by.text-center #{remix.remixed_by_name}
                td.plays.text-center #{remix.plays_count}
                td.downloads.text-center #{remix.downloads_count}
