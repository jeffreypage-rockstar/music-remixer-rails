#song
  .container
    .row
      .col-sm-6
        .thumbnail
          = image_tag @song.image_url(:medium)
      .col-sm-6
        h3
          = @song.name
        h4
          = @song.decorate.artist_name

        br
        button.play-button.paused Play

        .mix-styles style="margin-top:20px"
          ul.btn-group role="group" style="padding-left:0"
          button.style.btn.btn-primary type="button" data-style="Original" style="margin-right:5px"
            | Original
          button.style.btn.btn-default type="button" data-style="Mix2" style="margin-right:5px"
            | Mix2
          button.style.btn.btn-default type="button" data-style="Mix3" style="margin-right:5px"
            | Mix3
    .row
      - @song.parts.each do |part|
        div id="part-#{part.id}"

javascript:
  var parts = #{raw(@clips.to_json)};
  var currentPart = 0, sounds = [];
  var partCount = #{@song.parts.count};

  function intializeSoundClips() {
    var sound = null;
    for (var i = 0; i < partCount; i++) {
      sounds[i] = [];
      var clipCount = parts[i].clips.length;
      for (var j = 0; j < clipCount; j++) {
        console.log(parts[i].clips[j].url);
        sound = new Audio(parts[i].clips[j].url);
        sound.volume = parts[i].clips[j].styles['Original'] ? 0 : 1;
        sounds[i][j] = sound;
        sounds[i][j].buffered;
      }
    }
    playNext();
  }

  function playNext() {
    console.log("currentPart ::", currentPart);
    if (currentPart >= parts.length) {
      return
    }
    sounds[currentPart][0].addEventListener("ended", function () {
      currentPart++;
      console.log(currentPart + " Clip ended !!!");
      $("#clips-" + currentPart).removeClass("playing");
      if (currentPart >= partCount) {
        currentPart = 0;
        return;
      }

      playNext();
      $("#clips-" + (currentPart + 1)).addClass("playing");
      for (var i = 0; i < sounds[currentPart].length - 1; i++) {
        var sound = sounds[currentPart][i];
        sound.play();
      }
    })
  }

  $(document).ready(function () {
    $(".play-button").click(function (event) {
      event.stopPropagation();

      // Play or Paused Sound Clips
      if ($(event.target).hasClass('paused')) {
        $(event.target).html('Pause');
      }
      else {
        $(event.target).html('Play');
      }

      for (var i = 0; i < sounds[currentPart].length - 1; i++) {
        var sound = sounds[currentPart][i];
        if ($(event.target).hasClass('paused')) {
          sound.play();
        } else {
          sound.pause();
        }
      }
      $(event.target).toggleClass('paused');
    });

    $("button.style").click(function (event) {
      event.stopPropagation();
      var style = $(event.target).data('style');
      $('button.style').removeClass('btn-primary');
      $('button.style').addClass('btn-default');
      $(this).addClass('btn-primary');

      for (var i = 0; i < partCount; i++) {
        for (var j = 0; j < sounds[i].length - 1; j++) {
          var sound = sounds[i][j];
          if (parts[i].clips[j].styles[style] == true) {
            console.log("Muting i:" + i + ", j:" + j + ", style:" + style);
            sound.volume = 0;
          }
          else {
            sound.volume = 1;
          }
        }
      }
    });

    $("button.remix").click(function (event) {
      event.stopPropagation();
      var remix = $(event.target).data('remix');
    });

    // Intialize all sound clips for play
    intializeSoundClips();
  });